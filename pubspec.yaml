name: lost_and_found
description: LostAndFound app
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.0.2 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  
  device_preview: ^1.1.0
  cupertino_icons: ^1.0.2
  image_picker: ^0.8.9
  flutter_holo_date_picker: ^1.1.0
  date_format: ^2.0.7
  flutter_map: ^5.0.0
  latlong2: ^0.9.0
  url_launcher: ^6.1.11
  permission_handler: ^10.3.0
  geolocator: ^9.0.2
  flutter_map_animations: ^0.4.1
  dartz: ^0.10.1
  equatable: ^2.0.0
  retrofit: ^4.0.1
  dio: ^5.2.1
  built_value: ^8.6.1
  json_annotation: ^4.8.1
  json_serializable: ^6.7.0
  internet_connection_checker_plus: ^2.0.0
  bloc: ^8.1.2
  flutter_bloc: ^8.1.3
  freezed_annotation: ^2.2.0
  flutter_secure_storage: ^8.0.0
  get_it: ^7.6.0
  dio_http_formatter: ^3.1.0
  info_popup: ^3.0.4
  flutter_chat_ui: ^1.6.9
  sqflite: ^2.2.8+4
  floor: ^1.4.2
  dartx: ^1.2.0
  intl: ^0.18.0
  http: ^1.1.0
  badges: ^3.1.1
  sizer: ^2.0.15
  google_fonts: ^5.1.0

  # Firebase
  firebase_core: ^2.15.0
  firebase_messaging: ^14.6.5
  firebase_auth: ^4.8.0
  cloud_firestore: ^4.9.0
  flutter_firebase_chat_core: ^1.6.7
  flutter_chat_types: ^3.6.2

  map_launcher: ^2.5.0+1
  fluttertoast: ^8.2.2
  dynamic_color: ^1.6.6

  flutter_localizations:
    sdk: flutter

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_launcher_icons: ^0.13.1

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

  retrofit_generator: ^7.0.1
  build_runner: ^2.4.5
  built_value_generator: any
  freezed: ^2.3.5
  floor_generator: ^1.4.2

flutter_icons:
  android: true
  ios: true
  image_path: "assets/images/logo.png"

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  generate: true

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
